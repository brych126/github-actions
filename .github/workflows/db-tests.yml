name: Run DB Integration Tests

on:
  workflow_dispatch:

jobs:
  db-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: DatabaseTests

    steps:
      - uses: actions/checkout@v4
      
      - name: Ls
        run: |
         pwd
         ls -l -R .
         echo "**********"
         ls -l -R ${{github.workspace}}

      - name: List docker info
        run: |
         docker version
         docker compose version

      - name: Start SQL Server
        run: |
          docker run -d \
            --name sql_server \
            -e "ACCEPT_EULA=Y" \
            -e "SA_PASSWORD=Password1" \
            -v "./scripts:/scripts:ro" \
            -p 1433:1433 \
            mcr.microsoft.com/mssql/server:2022-latest

      - name: Wait for SQL Server to be ready
        run: |
         sql_ready=false
      
          for i in {1..30}; do
            docker exec sql_server /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password1 -Q "SELECT 1" -C && {
              sql_ready=true
              break
            }
            echo "Waiting for SQL Server..."
            sleep 2
          done

          if [ "$sql_ready" = false ]; then
            echo "‚ùå SQL Server is not responding after 30 attempts"
            exit 1
          fi
        shell: bash

      - name: Run DB init script
        run: |
          docker exec sql_server /opt/mssql-tools18/bin/sqlcmd \
            -S localhost \
            -U sa \
            -P YourStrongPassword123 \
            -i /scripts/CreateDbStructure.sql \
            -C

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-db-tests-nuget-${{ hashFiles('DatabaseTestsAdoNet/DatabaseTestsAdoNet.csproj') }}
          restore-keys: |
            ${{ runner.os }}-db-tests-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ./DatabaseTestsAdoNet

      - name: Build
        run: dotnet build ./DatabaseTestsAdoNet

      - name: Run db tests
        run: dotnet test --logger ./DatabaseTestsAdoNet